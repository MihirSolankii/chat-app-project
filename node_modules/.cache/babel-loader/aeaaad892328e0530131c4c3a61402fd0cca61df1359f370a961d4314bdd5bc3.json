{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat app\\\\client\\\\src\\\\components\\\\context\\\\ConversationProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useContacts } from './ContactProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n  return useContext(ConversationsContext);\n}\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ConversationProvider({\n  children\n}) {\n  _s2();\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n  const {\n    contacts\n  } = useContacts();\n  function createConversation(recipients) {\n    setConversations(prevConversation => {\n      return [...prevConversation, {\n        recipients,\n        message: []\n      }];\n    });\n  }\n  const formmatedConverstions = conversations.map(conversation => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => contact.id === recipient);\n      const name = contact && contact.name || recipient;\n      return {\n        id: recipient,\n        name\n      };\n    });\n    return {\n      ...conversation,\n      recipients\n    };\n  });\n  const value = {\n    conversations: formmatedConverstions,\n    createConversation\n  };\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s2(ConversationProvider, \"ZDHhzHN1113Jm3JCTanYzXIAYqc=\", false, function () {\n  return [useLocalStorage, useContacts];\n});\n_c = ConversationProvider;\nvar _c;\n$RefreshReg$(_c, \"ConversationProvider\");","map":{"version":3,"names":["React","useContext","useLocalStorage","useContacts","jsxDEV","_jsxDEV","ConversationsContext","createContext","useConversations","_s","ConversationProvider","children","_s2","conversations","setConversations","contacts","createConversation","recipients","prevConversation","message","formmatedConverstions","map","conversation","recipient","contact","find","id","name","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/chat app/client/src/components/context/ConversationProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { useContacts } from './ContactProvider';\r\n\r\nconst ConversationsContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n  return useContext(ConversationsContext)\r\n}\r\n\r\nexport function ConversationProvider({ children }) {\r\n  const [conversations, setConversations] = useLocalStorage('conversations', [])\r\n  const {contacts}=useContacts();\r\n\r\n  function createConversation(recipients) {\r\n    setConversations(prevConversation => {\r\n      return [...prevConversation, { recipients,message:[] }]\r\n    })\r\n  }\r\n  const formmatedConverstions=conversations.map(conversation=>{\r\n    const recipients=conversation.recipients.map(recipient=>{\r\n      const contact=contacts.find(contact=>contact.id===recipient)\r\n\r\n      const name=(contact && contact.name) || recipient\r\n\r\n      return {id:recipient,name}\r\n    })\r\n\r\n    return {...conversation,recipients}\r\n  })\r\n  const value={\r\n    conversations:formmatedConverstions,\r\n    createConversation\r\n  }\r\n     return (\r\n    <ConversationsContext.Provider value={ value }>\r\n      {children}\r\n    </ConversationsContext.Provider>\r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,oBAAoB,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;AAElD,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,OAAOR,UAAU,CAACK,oBAAoB,CAAC;AACzC;AAACG,EAAA,CAFeD,gBAAgB;AAIhC,OAAO,SAASE,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,eAAe,CAAC,eAAe,EAAE,EAAE,CAAC;EAC9E,MAAM;IAACa;EAAQ,CAAC,GAACZ,WAAW,CAAC,CAAC;EAE9B,SAASa,kBAAkBA,CAACC,UAAU,EAAE;IACtCH,gBAAgB,CAACI,gBAAgB,IAAI;MACnC,OAAO,CAAC,GAAGA,gBAAgB,EAAE;QAAED,UAAU;QAACE,OAAO,EAAC;MAAG,CAAC,CAAC;IACzD,CAAC,CAAC;EACJ;EACA,MAAMC,qBAAqB,GAACP,aAAa,CAACQ,GAAG,CAACC,YAAY,IAAE;IAC1D,MAAML,UAAU,GAACK,YAAY,CAACL,UAAU,CAACI,GAAG,CAACE,SAAS,IAAE;MACtD,MAAMC,OAAO,GAACT,QAAQ,CAACU,IAAI,CAACD,OAAO,IAAEA,OAAO,CAACE,EAAE,KAAGH,SAAS,CAAC;MAE5D,MAAMI,IAAI,GAAEH,OAAO,IAAIA,OAAO,CAACG,IAAI,IAAKJ,SAAS;MAEjD,OAAO;QAACG,EAAE,EAACH,SAAS;QAACI;MAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO;MAAC,GAAGL,YAAY;MAACL;IAAU,CAAC;EACrC,CAAC,CAAC;EACF,MAAMW,KAAK,GAAC;IACVf,aAAa,EAACO,qBAAqB;IACnCJ;EACF,CAAC;EACE,oBACDX,OAAA,CAACC,oBAAoB,CAACuB,QAAQ;IAACD,KAAK,EAAGA,KAAO;IAAAjB,QAAA,EAC3CA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAEpC;AAACrB,GAAA,CA7BeF,oBAAoB;EAAA,QACQR,eAAe,EACxCC,WAAW;AAAA;AAAA+B,EAAA,GAFdxB,oBAAoB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}