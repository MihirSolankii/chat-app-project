{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat app\\\\client\\\\src\\\\components\\\\context\\\\ConversationProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useContacts } from './ContactProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n  return useContext(ConversationsContext);\n}\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ConversationsProvider({\n  children\n}) {\n  _s2();\n  // Fixed typo in the function name\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n  const {\n    contacts\n  } = useContacts(); // Destructure `contacts` correctly from `useContacts`\n\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  }\n  const formattedConversations = conversations.map(conversation => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => contact.id === recipient);\n      const name = contact && contact.name || recipient;\n      return {\n        id: recipient,\n        name\n      };\n    });\n    return {\n      ...conversation,\n      recipients\n    };\n  });\n  const value = {\n    conversations: formattedConversations,\n    createConversation\n  };\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s2(ConversationsProvider, \"gOGXJWDcS+RAc057f7VQQB+PN+4=\", false, function () {\n  return [useLocalStorage, useContacts];\n});\n_c = ConversationsProvider;\nvar _c;\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["React","useContext","useLocalStorage","useContacts","jsxDEV","_jsxDEV","ConversationsContext","createContext","useConversations","_s","ConversationsProvider","children","_s2","conversations","setConversations","contacts","createConversation","recipients","prevConversations","messages","formattedConversations","map","conversation","recipient","contact","find","id","name","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/chat app/client/src/components/context/ConversationProvider.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { useContacts } from './ContactProvider';\r\n\r\nconst ConversationsContext = React.createContext();\r\n\r\nexport function useConversations() {\r\n  return useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ children }) { // Fixed typo in the function name\r\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\r\n  const { contacts } = useContacts(); // Destructure `contacts` correctly from `useContacts`\r\n\r\n  function createConversation(recipients) {\r\n    setConversations(prevConversations => {\r\n      return [...prevConversations, { recipients, messages: [] }];\r\n    });\r\n  }\r\n\r\n  const formattedConversations = conversations.map(conversation => {\r\n    const recipients = conversation.recipients.map(recipient => {\r\n      const contact = contacts.find(contact => contact.id === recipient);\r\n      const name = (contact && contact.name) || recipient;\r\n\r\n      return { id: recipient, name };\r\n    });\r\n\r\n    return { ...conversation, recipients };\r\n  });\r\n\r\n  const value = {\r\n    conversations: formattedConversations,\r\n    createConversation,\r\n  };\r\n\r\n  return (\r\n    <ConversationsContext.Provider value={value}>\r\n      {children}\r\n    </ConversationsContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,oBAAoB,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;AAElD,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,OAAOR,UAAU,CAACK,oBAAoB,CAAC;AACzC;AAACG,EAAA,CAFeD,gBAAgB;AAIhC,OAAO,SAASE,qBAAqBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAE;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,eAAe,CAAC,eAAe,EAAE,EAAE,CAAC;EAC9E,MAAM;IAAEa;EAAS,CAAC,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEpC,SAASa,kBAAkBA,CAACC,UAAU,EAAE;IACtCH,gBAAgB,CAACI,iBAAiB,IAAI;MACpC,OAAO,CAAC,GAAGA,iBAAiB,EAAE;QAAED,UAAU;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEA,MAAMC,sBAAsB,GAAGP,aAAa,CAACQ,GAAG,CAACC,YAAY,IAAI;IAC/D,MAAML,UAAU,GAAGK,YAAY,CAACL,UAAU,CAACI,GAAG,CAACE,SAAS,IAAI;MAC1D,MAAMC,OAAO,GAAGT,QAAQ,CAACU,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,EAAE,KAAKH,SAAS,CAAC;MAClE,MAAMI,IAAI,GAAIH,OAAO,IAAIA,OAAO,CAACG,IAAI,IAAKJ,SAAS;MAEnD,OAAO;QAAEG,EAAE,EAAEH,SAAS;QAAEI;MAAK,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;MAAE,GAAGL,YAAY;MAAEL;IAAW,CAAC;EACxC,CAAC,CAAC;EAEF,MAAMW,KAAK,GAAG;IACZf,aAAa,EAAEO,sBAAsB;IACrCJ;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,oBAAoB,CAACuB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EACzCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACoB,CAAC;AAEpC;AAACrB,GAAA,CA/BeF,qBAAqB;EAAA,QACOR,eAAe,EACpCC,WAAW;AAAA;AAAA+B,EAAA,GAFlBxB,qBAAqB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}