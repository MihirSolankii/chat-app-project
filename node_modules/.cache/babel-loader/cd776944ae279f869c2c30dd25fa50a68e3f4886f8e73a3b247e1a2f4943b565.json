{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat app\\\\client\\\\src\\\\components\\\\NewConversationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../components/context/ContactProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewConversationModal() {\n  _s();\n  const idRef = useRef();\n  const nameRef = useRef();\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  function handleCheckboxChange(contactid) {\n    setSelectedContactIds(prevselectedcontactIds => {\n      if (prevselectedcontactIds.includes(contactid)) {\n        return prevselectedcontactIds.filter(prevcontactid => prevcontactid !== contactid);\n      } else {\n        return [...prevselectedcontactIds, contactid];\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => {\n          /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: contact.id,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              value: selectedContactIds.includes(contact.id),\n              label: contact.name,\n              onChange: handleCheckboxChange(contact.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, contact.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(NewConversationModal, \"CNfxIj1yWFhwW1wwW/fPeGzQNew=\", false, function () {\n  return [useContacts];\n});\n_c = NewConversationModal;\nexport default NewConversationModal;\nvar _c;\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useRef","Modal","Form","Button","useContacts","jsxDEV","_jsxDEV","NewConversationModal","_s","idRef","nameRef","selectedContactIds","setSelectedContactIds","useState","contacts","handleCheckboxChange","contactid","prevselectedcontactIds","includes","filter","prevcontactid","children","Header","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","handleSubmit","map","contact","Group","controlId","id","Check","type","value","label","name","onChange","_c","$RefreshReg$"],"sources":["D:/chat app/client/src/components/NewConversationModal.js"],"sourcesContent":["import React,{useRef} from 'react'\r\nimport {Modal,Form,Button} from 'react-bootstrap'\r\nimport { useContacts } from '../components/context/ContactProvider'\r\nfunction NewConversationModal() {\r\n    const idRef=useRef();\r\n    const nameRef=useRef();\r\n    const [selectedContactIds, setSelectedContactIds] = useState([])\r\n    const { contacts } = useContacts()\r\n    \r\n    function handleCheckboxChange(contactid){\r\n        setSelectedContactIds(prevselectedcontactIds=>{\r\n            if(prevselectedcontactIds.includes(contactid)){\r\n                return prevselectedcontactIds.filter(prevcontactid=>prevcontactid !== contactid)\r\n            }else{\r\n                return [...prevselectedcontactIds,contactid]\r\n            }\r\n        })\r\n    }\r\n  return (\r\n    <div>\r\n      <Modal.Header closeButton>\r\n        Create Conversation\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n         {contacts.map(contact=>{\r\n            <Form.Group controlId={contact.id} key={contact.id}>\r\n                <Form.Check\r\n                type='checkbox'\r\n                value={selectedContactIds.includes(contact.id)}\r\n                label={contact.name}\r\n                onChange={handleCheckboxChange(contact.id)}\r\n                />\r\n            </Form.Group>\r\n         })}\r\n         <Button type='submit'>Create</Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewConversationModal\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,MAAM,QAAO,OAAO;AAClC,SAAQC,KAAK,EAACC,IAAI,EAACC,MAAM,QAAO,iBAAiB;AACjD,SAASC,WAAW,QAAQ,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnE,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,KAAK,GAACT,MAAM,CAAC,CAAC;EACpB,MAAMU,OAAO,GAACV,MAAM,CAAC,CAAC;EACtB,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM;IAAEC;EAAS,CAAC,GAAGV,WAAW,CAAC,CAAC;EAElC,SAASW,oBAAoBA,CAACC,SAAS,EAAC;IACpCJ,qBAAqB,CAACK,sBAAsB,IAAE;MAC1C,IAAGA,sBAAsB,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAC;QAC1C,OAAOC,sBAAsB,CAACE,MAAM,CAACC,aAAa,IAAEA,aAAa,KAAKJ,SAAS,CAAC;MACpF,CAAC,MAAI;QACD,OAAO,CAAC,GAAGC,sBAAsB,EAACD,SAAS,CAAC;MAChD;IACJ,CAAC,CAAC;EACN;EACF,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACL,KAAK,CAACqB,MAAM;MAACC,WAAW;MAAAF,QAAA,EAAC;IAE1B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACfrB,OAAA,CAACL,KAAK,CAAC2B,IAAI;MAAAP,QAAA,eACTf,OAAA,CAACJ,IAAI;QAAC2B,QAAQ,EAAEC,YAAa;QAAAT,QAAA,GAC3BP,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAAE;UACpB,aAAA1B,OAAA,CAACJ,IAAI,CAAC+B,KAAK;YAACC,SAAS,EAAEF,OAAO,CAACG,EAAG;YAAAd,QAAA,eAC9Bf,OAAA,CAACJ,IAAI,CAACkC,KAAK;cACXC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAE3B,kBAAkB,CAACO,QAAQ,CAACc,OAAO,CAACG,EAAE,CAAE;cAC/CI,KAAK,EAAEP,OAAO,CAACQ,IAAK;cACpBC,QAAQ,EAAE1B,oBAAoB,CAACiB,OAAO,CAACG,EAAE;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C;UAAC,GANkCK,OAAO,CAACG,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOtC,CAAC;QAChB,CAAC,CAAC,eACFrB,OAAA,CAACH,MAAM;UAACkC,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACnB,EAAA,CArCQD,oBAAoB;EAAA,QAIJH,WAAW;AAAA;AAAAsC,EAAA,GAJ3BnC,oBAAoB;AAuC7B,eAAeA,oBAAoB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}